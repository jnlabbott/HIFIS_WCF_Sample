//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HIFIS_Sample_Client.API.Authentication {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembershipUser", Namespace="http://schemas.datacontract.org/2004/07/System.Web.Security")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ApplicationSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.UserRight[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.UserRight))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.WCFValidationResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Parameters))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.BaseDataContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Parameter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Parameter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ParameterData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ListItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Report))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.File))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ClientHousingHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingUnit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingUnitStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Landlord))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.DigitalContact[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.DigitalContact))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingMaintenance[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingMaintenance))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingPhoto[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingPhoto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingSubsidy[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingSubsidy))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipCreateStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipUser[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipPasswordFormat))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(short[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HIFIS.ENUMS.CommonClasses.ValidationResultCode))]
    public partial class MembershipUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string _CommentField;
        
        private System.DateTime _CreationDateField;
        
        private string _EmailField;
        
        private bool _IsApprovedField;
        
        private bool _IsLockedOutField;
        
        private System.DateTime _LastActivityDateField;
        
        private System.DateTime _LastLockoutDateField;
        
        private System.DateTime _LastLoginDateField;
        
        private System.DateTime _LastPasswordChangedDateField;
        
        private string _PasswordQuestionField;
        
        private string _ProviderNameField;
        
        private object _ProviderUserKeyField;
        
        private string _UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _Comment {
            get {
                return this._CommentField;
            }
            set {
                if ((object.ReferenceEquals(this._CommentField, value) != true)) {
                    this._CommentField = value;
                    this.RaisePropertyChanged("_Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime _CreationDate {
            get {
                return this._CreationDateField;
            }
            set {
                if ((this._CreationDateField.Equals(value) != true)) {
                    this._CreationDateField = value;
                    this.RaisePropertyChanged("_CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _Email {
            get {
                return this._EmailField;
            }
            set {
                if ((object.ReferenceEquals(this._EmailField, value) != true)) {
                    this._EmailField = value;
                    this.RaisePropertyChanged("_Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool _IsApproved {
            get {
                return this._IsApprovedField;
            }
            set {
                if ((this._IsApprovedField.Equals(value) != true)) {
                    this._IsApprovedField = value;
                    this.RaisePropertyChanged("_IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool _IsLockedOut {
            get {
                return this._IsLockedOutField;
            }
            set {
                if ((this._IsLockedOutField.Equals(value) != true)) {
                    this._IsLockedOutField = value;
                    this.RaisePropertyChanged("_IsLockedOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime _LastActivityDate {
            get {
                return this._LastActivityDateField;
            }
            set {
                if ((this._LastActivityDateField.Equals(value) != true)) {
                    this._LastActivityDateField = value;
                    this.RaisePropertyChanged("_LastActivityDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime _LastLockoutDate {
            get {
                return this._LastLockoutDateField;
            }
            set {
                if ((this._LastLockoutDateField.Equals(value) != true)) {
                    this._LastLockoutDateField = value;
                    this.RaisePropertyChanged("_LastLockoutDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime _LastLoginDate {
            get {
                return this._LastLoginDateField;
            }
            set {
                if ((this._LastLoginDateField.Equals(value) != true)) {
                    this._LastLoginDateField = value;
                    this.RaisePropertyChanged("_LastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime _LastPasswordChangedDate {
            get {
                return this._LastPasswordChangedDateField;
            }
            set {
                if ((this._LastPasswordChangedDateField.Equals(value) != true)) {
                    this._LastPasswordChangedDateField = value;
                    this.RaisePropertyChanged("_LastPasswordChangedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _PasswordQuestion {
            get {
                return this._PasswordQuestionField;
            }
            set {
                if ((object.ReferenceEquals(this._PasswordQuestionField, value) != true)) {
                    this._PasswordQuestionField = value;
                    this.RaisePropertyChanged("_PasswordQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _ProviderName {
            get {
                return this._ProviderNameField;
            }
            set {
                if ((object.ReferenceEquals(this._ProviderNameField, value) != true)) {
                    this._ProviderNameField = value;
                    this.RaisePropertyChanged("_ProviderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public object _ProviderUserKey {
            get {
                return this._ProviderUserKeyField;
            }
            set {
                if ((object.ReferenceEquals(this._ProviderUserKeyField, value) != true)) {
                    this._ProviderUserKeyField = value;
                    this.RaisePropertyChanged("_ProviderUserKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _UserName {
            get {
                return this._UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this._UserNameField, value) != true)) {
                    this._UserNameField = value;
                    this.RaisePropertyChanged("_UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembershipCreateStatus", Namespace="http://schemas.datacontract.org/2004/07/System.Web.Security")]
    public enum MembershipCreateStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidUserName = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidPassword = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidQuestion = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidAnswer = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidEmail = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuplicateUserName = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuplicateEmail = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserRejected = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidProviderUserKey = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuplicateProviderUserKey = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProviderError = 11,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembershipPasswordFormat", Namespace="http://schemas.datacontract.org/2004/07/System.Web.Security")]
    public enum MembershipPasswordFormat : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Clear = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hashed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Encrypted = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="API.Authentication.IAuthenticationService")]
    public interface IAuthenticationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetApplicationName", ReplyAction="http://tempuri.org/IAuthenticationService/GetApplicationNameResponse")]
        string GetApplicationName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetApplicationName", ReplyAction="http://tempuri.org/IAuthenticationService/GetApplicationNameResponse")]
        System.Threading.Tasks.Task<string> GetApplicationNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetUserByUserName", ReplyAction="http://tempuri.org/IAuthenticationService/GetUserByUserNameResponse")]
        HIFIS_Sample_Client.API.Authentication.MembershipUser GetUserByUserName(string pUuserName, bool pUserIsOnline, HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetUserByUserName", ReplyAction="http://tempuri.org/IAuthenticationService/GetUserByUserNameResponse")]
        System.Threading.Tasks.Task<HIFIS_Sample_Client.API.Authentication.MembershipUser> GetUserByUserNameAsync(string pUuserName, bool pUserIsOnline, HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetUserByUserKey", ReplyAction="http://tempuri.org/IAuthenticationService/GetUserByUserKeyResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ApplicationSettings))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.UserRight[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.UserRight))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.WCFValidationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Parameters))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.BaseDataContract))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Parameter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Parameter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ParameterData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ListItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ListItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Report))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.File))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ClientHousingHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingUnit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Address))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingUnitStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Landlord))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.DigitalContact[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.DigitalContact))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingMaintenance[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingMaintenance))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingPhoto[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingPhoto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingSubsidy[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingSubsidy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipCreateStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipPasswordFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(int[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(short[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.ENUMS.CommonClasses.ValidationResultCode))]
        HIFIS_Sample_Client.API.Authentication.MembershipUser GetUserByUserKey(object pProviderUserKey, bool pUserIsOnline);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetUserByUserKey", ReplyAction="http://tempuri.org/IAuthenticationService/GetUserByUserKeyResponse")]
        System.Threading.Tasks.Task<HIFIS_Sample_Client.API.Authentication.MembershipUser> GetUserByUserKeyAsync(object pProviderUserKey, bool pUserIsOnline);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/ChangePassword", ReplyAction="http://tempuri.org/IAuthenticationService/ChangePasswordResponse")]
        bool ChangePassword(string pUserName, string pOldPassword, string pNewPassword, HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/ChangePassword", ReplyAction="http://tempuri.org/IAuthenticationService/ChangePasswordResponse")]
        System.Threading.Tasks.Task<bool> ChangePasswordAsync(string pUserName, string pOldPassword, string pNewPassword, HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/ChangePasswordQuestionAndAnswer", ReplyAction="http://tempuri.org/IAuthenticationService/ChangePasswordQuestionAndAnswerResponse" +
            "")]
        bool ChangePasswordQuestionAndAnswer(string pUserName, string pPassword, string pNewPasswordQuestion, string pNewPasswordAnswer, HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/ChangePasswordQuestionAndAnswer", ReplyAction="http://tempuri.org/IAuthenticationService/ChangePasswordQuestionAndAnswerResponse" +
            "")]
        System.Threading.Tasks.Task<bool> ChangePasswordQuestionAndAnswerAsync(string pUserName, string pPassword, string pNewPasswordQuestion, string pNewPasswordAnswer, HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/CreateUser", ReplyAction="http://tempuri.org/IAuthenticationService/CreateUserResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ApplicationSettings))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.UserRight[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.UserRight))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.WCFValidationResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Parameters))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.BaseDataContract))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Parameter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Parameter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ParameterData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ListItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ListItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Report))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.File))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ClientHousingHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingUnit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Address))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingUnitStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Landlord))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.DigitalContact[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.DigitalContact))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingMaintenance[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingMaintenance))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingPhoto[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingPhoto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingSubsidy[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingSubsidy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipCreateStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipPasswordFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(int[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(short[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.ENUMS.CommonClasses.ValidationResultCode))]
        HIFIS_Sample_Client.API.Authentication.CreateUserResponse CreateUser(HIFIS_Sample_Client.API.Authentication.CreateUserRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/CreateUser", ReplyAction="http://tempuri.org/IAuthenticationService/CreateUserResponse")]
        System.Threading.Tasks.Task<HIFIS_Sample_Client.API.Authentication.CreateUserResponse> CreateUserAsync(HIFIS_Sample_Client.API.Authentication.CreateUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/DeleteUser", ReplyAction="http://tempuri.org/IAuthenticationService/DeleteUserResponse")]
        bool DeleteUser(string pUserName, bool pDeleteAllRelatedData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/DeleteUser", ReplyAction="http://tempuri.org/IAuthenticationService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(string pUserName, bool pDeleteAllRelatedData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetEnablePasswordReset", ReplyAction="http://tempuri.org/IAuthenticationService/GetEnablePasswordResetResponse")]
        bool GetEnablePasswordReset();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetEnablePasswordReset", ReplyAction="http://tempuri.org/IAuthenticationService/GetEnablePasswordResetResponse")]
        System.Threading.Tasks.Task<bool> GetEnablePasswordResetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetEnablePasswordRetrieval", ReplyAction="http://tempuri.org/IAuthenticationService/GetEnablePasswordRetrievalResponse")]
        bool GetEnablePasswordRetrieval();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetEnablePasswordRetrieval", ReplyAction="http://tempuri.org/IAuthenticationService/GetEnablePasswordRetrievalResponse")]
        System.Threading.Tasks.Task<bool> GetEnablePasswordRetrievalAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/FindUsersByEmail", ReplyAction="http://tempuri.org/IAuthenticationService/FindUsersByEmailResponse")]
        HIFIS_Sample_Client.API.Authentication.FindUsersByEmailResponse FindUsersByEmail(HIFIS_Sample_Client.API.Authentication.FindUsersByEmailRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/FindUsersByEmail", ReplyAction="http://tempuri.org/IAuthenticationService/FindUsersByEmailResponse")]
        System.Threading.Tasks.Task<HIFIS_Sample_Client.API.Authentication.FindUsersByEmailResponse> FindUsersByEmailAsync(HIFIS_Sample_Client.API.Authentication.FindUsersByEmailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/FindUsersByName", ReplyAction="http://tempuri.org/IAuthenticationService/FindUsersByNameResponse")]
        HIFIS_Sample_Client.API.Authentication.FindUsersByNameResponse FindUsersByName(HIFIS_Sample_Client.API.Authentication.FindUsersByNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/FindUsersByName", ReplyAction="http://tempuri.org/IAuthenticationService/FindUsersByNameResponse")]
        System.Threading.Tasks.Task<HIFIS_Sample_Client.API.Authentication.FindUsersByNameResponse> FindUsersByNameAsync(HIFIS_Sample_Client.API.Authentication.FindUsersByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetAllUsers", ReplyAction="http://tempuri.org/IAuthenticationService/GetAllUsersResponse")]
        HIFIS_Sample_Client.API.Authentication.GetAllUsersResponse GetAllUsers(HIFIS_Sample_Client.API.Authentication.GetAllUsersRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetAllUsers", ReplyAction="http://tempuri.org/IAuthenticationService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<HIFIS_Sample_Client.API.Authentication.GetAllUsersResponse> GetAllUsersAsync(HIFIS_Sample_Client.API.Authentication.GetAllUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetNumberOfUsersOnline", ReplyAction="http://tempuri.org/IAuthenticationService/GetNumberOfUsersOnlineResponse")]
        int GetNumberOfUsersOnline();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetNumberOfUsersOnline", ReplyAction="http://tempuri.org/IAuthenticationService/GetNumberOfUsersOnlineResponse")]
        System.Threading.Tasks.Task<int> GetNumberOfUsersOnlineAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetPassword", ReplyAction="http://tempuri.org/IAuthenticationService/GetPasswordResponse")]
        string GetPassword(string pUserName, string pAnswer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetPassword", ReplyAction="http://tempuri.org/IAuthenticationService/GetPasswordResponse")]
        System.Threading.Tasks.Task<string> GetPasswordAsync(string pUserName, string pAnswer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetUserNameByEmail", ReplyAction="http://tempuri.org/IAuthenticationService/GetUserNameByEmailResponse")]
        string GetUserNameByEmail(string pEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetUserNameByEmail", ReplyAction="http://tempuri.org/IAuthenticationService/GetUserNameByEmailResponse")]
        System.Threading.Tasks.Task<string> GetUserNameByEmailAsync(string pEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetMaxInvalidPasswordAttempts", ReplyAction="http://tempuri.org/IAuthenticationService/GetMaxInvalidPasswordAttemptsResponse")]
        int GetMaxInvalidPasswordAttempts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetMaxInvalidPasswordAttempts", ReplyAction="http://tempuri.org/IAuthenticationService/GetMaxInvalidPasswordAttemptsResponse")]
        System.Threading.Tasks.Task<int> GetMaxInvalidPasswordAttemptsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetMinRequiredNonAlphanumericCharacters" +
            "", ReplyAction="http://tempuri.org/IAuthenticationService/GetMinRequiredNonAlphanumericCharacters" +
            "Response")]
        int GetMinRequiredNonAlphanumericCharacters(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetMinRequiredNonAlphanumericCharacters" +
            "", ReplyAction="http://tempuri.org/IAuthenticationService/GetMinRequiredNonAlphanumericCharacters" +
            "Response")]
        System.Threading.Tasks.Task<int> GetMinRequiredNonAlphanumericCharactersAsync(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetMinRequiredPasswordLength", ReplyAction="http://tempuri.org/IAuthenticationService/GetMinRequiredPasswordLengthResponse")]
        int GetMinRequiredPasswordLength(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetMinRequiredPasswordLength", ReplyAction="http://tempuri.org/IAuthenticationService/GetMinRequiredPasswordLengthResponse")]
        System.Threading.Tasks.Task<int> GetMinRequiredPasswordLengthAsync(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetPasswordAttemptWindow", ReplyAction="http://tempuri.org/IAuthenticationService/GetPasswordAttemptWindowResponse")]
        int GetPasswordAttemptWindow();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetPasswordAttemptWindow", ReplyAction="http://tempuri.org/IAuthenticationService/GetPasswordAttemptWindowResponse")]
        System.Threading.Tasks.Task<int> GetPasswordAttemptWindowAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetPasswordFormat", ReplyAction="http://tempuri.org/IAuthenticationService/GetPasswordFormatResponse")]
        HIFIS_Sample_Client.API.Authentication.MembershipPasswordFormat GetPasswordFormat();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetPasswordFormat", ReplyAction="http://tempuri.org/IAuthenticationService/GetPasswordFormatResponse")]
        System.Threading.Tasks.Task<HIFIS_Sample_Client.API.Authentication.MembershipPasswordFormat> GetPasswordFormatAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetPasswordStrengthRegularExpression", ReplyAction="http://tempuri.org/IAuthenticationService/GetPasswordStrengthRegularExpressionRes" +
            "ponse")]
        string GetPasswordStrengthRegularExpression(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetPasswordStrengthRegularExpression", ReplyAction="http://tempuri.org/IAuthenticationService/GetPasswordStrengthRegularExpressionRes" +
            "ponse")]
        System.Threading.Tasks.Task<string> GetPasswordStrengthRegularExpressionAsync(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetRequiresQuestionAndAnswer", ReplyAction="http://tempuri.org/IAuthenticationService/GetRequiresQuestionAndAnswerResponse")]
        bool GetRequiresQuestionAndAnswer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetRequiresQuestionAndAnswer", ReplyAction="http://tempuri.org/IAuthenticationService/GetRequiresQuestionAndAnswerResponse")]
        System.Threading.Tasks.Task<bool> GetRequiresQuestionAndAnswerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetRequiresUniqueEmail", ReplyAction="http://tempuri.org/IAuthenticationService/GetRequiresUniqueEmailResponse")]
        bool GetRequiresUniqueEmail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetRequiresUniqueEmail", ReplyAction="http://tempuri.org/IAuthenticationService/GetRequiresUniqueEmailResponse")]
        System.Threading.Tasks.Task<bool> GetRequiresUniqueEmailAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/ResetPassword", ReplyAction="http://tempuri.org/IAuthenticationService/ResetPasswordResponse")]
        string ResetPassword(string pUserName, string pAnswer, System.Guid pProviderUserKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/ResetPassword", ReplyAction="http://tempuri.org/IAuthenticationService/ResetPasswordResponse")]
        System.Threading.Tasks.Task<string> ResetPasswordAsync(string pUserName, string pAnswer, System.Guid pProviderUserKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/UnlockUser", ReplyAction="http://tempuri.org/IAuthenticationService/UnlockUserResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ApplicationSettings))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.UserRight[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.UserRight))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Parameters))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.BaseDataContract))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Parameter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Parameter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ParameterData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ListItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ListItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Report))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.File))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ClientHousingHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingUnit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Address))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingUnitStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Landlord))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.DigitalContact[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.DigitalContact))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingMaintenance[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingMaintenance))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingPhoto[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingPhoto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingSubsidy[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingSubsidy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipCreateStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipPasswordFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(int[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(short[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.ENUMS.CommonClasses.ValidationResultCode))]
        HIFIS.CONTRACTS.WCFContracts.DataContracts.WCFValidationResult UnlockUser(string userName, HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/UnlockUser", ReplyAction="http://tempuri.org/IAuthenticationService/UnlockUserResponse")]
        System.Threading.Tasks.Task<HIFIS.CONTRACTS.WCFContracts.DataContracts.WCFValidationResult> UnlockUserAsync(string userName, HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/UpdateUser", ReplyAction="http://tempuri.org/IAuthenticationService/UpdateUserResponse")]
        void UpdateUser(HIFIS_Sample_Client.API.Authentication.MembershipUser pUser, HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/UpdateUser", ReplyAction="http://tempuri.org/IAuthenticationService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(HIFIS_Sample_Client.API.Authentication.MembershipUser pUser, HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/ValidateUser", ReplyAction="http://tempuri.org/IAuthenticationService/ValidateUserResponse")]
        HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication ValidateUser(string userName, string password, System.Nullable<int> userOrgID, string securityToken, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/ValidateUser", ReplyAction="http://tempuri.org/IAuthenticationService/ValidateUserResponse")]
        System.Threading.Tasks.Task<HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication> ValidateUserAsync(string userName, string password, System.Nullable<int> userOrgID, string securityToken, string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/RenewToken", ReplyAction="http://tempuri.org/IAuthenticationService/RenewTokenResponse")]
        HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication RenewToken(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/RenewToken", ReplyAction="http://tempuri.org/IAuthenticationService/RenewTokenResponse")]
        System.Threading.Tasks.Task<HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication> RenewTokenAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/InitializeTwoFactorToken", ReplyAction="http://tempuri.org/IAuthenticationService/InitializeTwoFactorTokenResponse")]
        void InitializeTwoFactorToken(string userName, HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/InitializeTwoFactorToken", ReplyAction="http://tempuri.org/IAuthenticationService/InitializeTwoFactorTokenResponse")]
        System.Threading.Tasks.Task InitializeTwoFactorTokenAsync(string userName, HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/LogOff", ReplyAction="http://tempuri.org/IAuthenticationService/LogOffResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ApplicationSettings))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.UserRight[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.UserRight))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Parameters))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.BaseDataContract))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Parameter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Parameter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ParameterData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ListItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ListItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Report))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.File))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.ClientHousingHistory))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingUnit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Address))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingUnitStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.Landlord))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.DigitalContact[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.DigitalContact))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingMaintenance[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingMaintenance))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingPhoto[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingPhoto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingSubsidy[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.CONTRACTS.WCFContracts.DataContracts.HousingSubsidy))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipCreateStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS_Sample_Client.API.Authentication.MembershipPasswordFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(int[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(short[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HIFIS.ENUMS.CommonClasses.ValidationResultCode))]
        HIFIS.CONTRACTS.WCFContracts.DataContracts.WCFValidationResult LogOff(HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/LogOff", ReplyAction="http://tempuri.org/IAuthenticationService/LogOffResponse")]
        System.Threading.Tasks.Task<HIFIS.CONTRACTS.WCFContracts.DataContracts.WCFValidationResult> LogOffAsync(HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/AddUsersToRoles", ReplyAction="http://tempuri.org/IAuthenticationService/AddUsersToRolesResponse")]
        void AddUsersToRoles(string[] pUserNames, string[] pRoleNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/AddUsersToRoles", ReplyAction="http://tempuri.org/IAuthenticationService/AddUsersToRolesResponse")]
        System.Threading.Tasks.Task AddUsersToRolesAsync(string[] pUserNames, string[] pRoleNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/CreateRole", ReplyAction="http://tempuri.org/IAuthenticationService/CreateRoleResponse")]
        void CreateRole(string pRoleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/CreateRole", ReplyAction="http://tempuri.org/IAuthenticationService/CreateRoleResponse")]
        System.Threading.Tasks.Task CreateRoleAsync(string pRoleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/DeleteRole", ReplyAction="http://tempuri.org/IAuthenticationService/DeleteRoleResponse")]
        bool DeleteRole(string pRoleName, bool pThrowOnPopulatedRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/DeleteRole", ReplyAction="http://tempuri.org/IAuthenticationService/DeleteRoleResponse")]
        System.Threading.Tasks.Task<bool> DeleteRoleAsync(string pRoleName, bool pThrowOnPopulatedRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/FindUsersInRole", ReplyAction="http://tempuri.org/IAuthenticationService/FindUsersInRoleResponse")]
        string[] FindUsersInRole(string pRoleName, string pUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/FindUsersInRole", ReplyAction="http://tempuri.org/IAuthenticationService/FindUsersInRoleResponse")]
        System.Threading.Tasks.Task<string[]> FindUsersInRoleAsync(string pRoleName, string pUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetAllRoles", ReplyAction="http://tempuri.org/IAuthenticationService/GetAllRolesResponse")]
        string[] GetAllRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetAllRoles", ReplyAction="http://tempuri.org/IAuthenticationService/GetAllRolesResponse")]
        System.Threading.Tasks.Task<string[]> GetAllRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetRolesForUser", ReplyAction="http://tempuri.org/IAuthenticationService/GetRolesForUserResponse")]
        string[] GetRolesForUser(string pUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetRolesForUser", ReplyAction="http://tempuri.org/IAuthenticationService/GetRolesForUserResponse")]
        System.Threading.Tasks.Task<string[]> GetRolesForUserAsync(string pUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetUsersInRole", ReplyAction="http://tempuri.org/IAuthenticationService/GetUsersInRoleResponse")]
        string[] GetUsersInRole(string pRoleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetUsersInRole", ReplyAction="http://tempuri.org/IAuthenticationService/GetUsersInRoleResponse")]
        System.Threading.Tasks.Task<string[]> GetUsersInRoleAsync(string pRoleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/IsUserInRole", ReplyAction="http://tempuri.org/IAuthenticationService/IsUserInRoleResponse")]
        bool IsUserInRole(string pUserName, string pRoleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/IsUserInRole", ReplyAction="http://tempuri.org/IAuthenticationService/IsUserInRoleResponse")]
        System.Threading.Tasks.Task<bool> IsUserInRoleAsync(string pUserName, string pRoleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/RemoveUsersFromRoles", ReplyAction="http://tempuri.org/IAuthenticationService/RemoveUsersFromRolesResponse")]
        void RemoveUsersFromRoles(string[] pUserNames, string[] pRoleNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/RemoveUsersFromRoles", ReplyAction="http://tempuri.org/IAuthenticationService/RemoveUsersFromRolesResponse")]
        System.Threading.Tasks.Task RemoveUsersFromRolesAsync(string[] pUserNames, string[] pRoleNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/RoleExists", ReplyAction="http://tempuri.org/IAuthenticationService/RoleExistsResponse")]
        bool RoleExists(string pRoleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/RoleExists", ReplyAction="http://tempuri.org/IAuthenticationService/RoleExistsResponse")]
        System.Threading.Tasks.Task<bool> RoleExistsAsync(string pRoleName);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string pUserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string pPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string pEmail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string pPasswordQuestion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string pPasswordAnswer;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public bool pIsApproved;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public object pProviderUserKey;
        
        public CreateUserRequest() {
        }
        
        public CreateUserRequest(string pUserName, string pPassword, string pEmail, string pPasswordQuestion, string pPasswordAnswer, bool pIsApproved, object pProviderUserKey) {
            this.pUserName = pUserName;
            this.pPassword = pPassword;
            this.pEmail = pEmail;
            this.pPasswordQuestion = pPasswordQuestion;
            this.pPasswordAnswer = pPasswordAnswer;
            this.pIsApproved = pIsApproved;
            this.pProviderUserKey = pProviderUserKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public HIFIS_Sample_Client.API.Authentication.MembershipUser CreateUserResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public HIFIS_Sample_Client.API.Authentication.MembershipCreateStatus pStatus;
        
        public CreateUserResponse() {
        }
        
        public CreateUserResponse(HIFIS_Sample_Client.API.Authentication.MembershipUser CreateUserResult, HIFIS_Sample_Client.API.Authentication.MembershipCreateStatus pStatus) {
            this.CreateUserResult = CreateUserResult;
            this.pStatus = pStatus;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindUsersByEmail", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FindUsersByEmailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string pEmailToMatch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int pPageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int pPageSize;
        
        public FindUsersByEmailRequest() {
        }
        
        public FindUsersByEmailRequest(string pEmailToMatch, int pPageIndex, int pPageSize) {
            this.pEmailToMatch = pEmailToMatch;
            this.pPageIndex = pPageIndex;
            this.pPageSize = pPageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindUsersByEmailResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FindUsersByEmailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public HIFIS_Sample_Client.API.Authentication.MembershipUser[] FindUsersByEmailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int pTotalRecords;
        
        public FindUsersByEmailResponse() {
        }
        
        public FindUsersByEmailResponse(HIFIS_Sample_Client.API.Authentication.MembershipUser[] FindUsersByEmailResult, int pTotalRecords) {
            this.FindUsersByEmailResult = FindUsersByEmailResult;
            this.pTotalRecords = pTotalRecords;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindUsersByName", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FindUsersByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string pUsernameToMatch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int pPageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int pPageSize;
        
        public FindUsersByNameRequest() {
        }
        
        public FindUsersByNameRequest(string pUsernameToMatch, int pPageIndex, int pPageSize) {
            this.pUsernameToMatch = pUsernameToMatch;
            this.pPageIndex = pPageIndex;
            this.pPageSize = pPageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindUsersByNameResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FindUsersByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public HIFIS_Sample_Client.API.Authentication.MembershipUser[] FindUsersByNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int pTotalRecords;
        
        public FindUsersByNameResponse() {
        }
        
        public FindUsersByNameResponse(HIFIS_Sample_Client.API.Authentication.MembershipUser[] FindUsersByNameResult, int pTotalRecords) {
            this.FindUsersByNameResult = FindUsersByNameResult;
            this.pTotalRecords = pTotalRecords;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllUsers", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int pPageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int pPageSize;
        
        public GetAllUsersRequest() {
        }
        
        public GetAllUsersRequest(int pPageIndex, int pPageSize) {
            this.pPageIndex = pPageIndex;
            this.pPageSize = pPageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllUsersResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllUsersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public HIFIS_Sample_Client.API.Authentication.MembershipUser[] GetAllUsersResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int pTotalRecords;
        
        public GetAllUsersResponse() {
        }
        
        public GetAllUsersResponse(HIFIS_Sample_Client.API.Authentication.MembershipUser[] GetAllUsersResult, int pTotalRecords) {
            this.GetAllUsersResult = GetAllUsersResult;
            this.pTotalRecords = pTotalRecords;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticationServiceChannel : HIFIS_Sample_Client.API.Authentication.IAuthenticationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationServiceClient : System.ServiceModel.ClientBase<HIFIS_Sample_Client.API.Authentication.IAuthenticationService>, HIFIS_Sample_Client.API.Authentication.IAuthenticationService {
        
        public AuthenticationServiceClient() {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetApplicationName() {
            return base.Channel.GetApplicationName();
        }
        
        public System.Threading.Tasks.Task<string> GetApplicationNameAsync() {
            return base.Channel.GetApplicationNameAsync();
        }
        
        public HIFIS_Sample_Client.API.Authentication.MembershipUser GetUserByUserName(string pUuserName, bool pUserIsOnline, HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token) {
            return base.Channel.GetUserByUserName(pUuserName, pUserIsOnline, token);
        }
        
        public System.Threading.Tasks.Task<HIFIS_Sample_Client.API.Authentication.MembershipUser> GetUserByUserNameAsync(string pUuserName, bool pUserIsOnline, HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token) {
            return base.Channel.GetUserByUserNameAsync(pUuserName, pUserIsOnline, token);
        }
        
        public HIFIS_Sample_Client.API.Authentication.MembershipUser GetUserByUserKey(object pProviderUserKey, bool pUserIsOnline) {
            return base.Channel.GetUserByUserKey(pProviderUserKey, pUserIsOnline);
        }
        
        public System.Threading.Tasks.Task<HIFIS_Sample_Client.API.Authentication.MembershipUser> GetUserByUserKeyAsync(object pProviderUserKey, bool pUserIsOnline) {
            return base.Channel.GetUserByUserKeyAsync(pProviderUserKey, pUserIsOnline);
        }
        
        public bool ChangePassword(string pUserName, string pOldPassword, string pNewPassword, HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication) {
            return base.Channel.ChangePassword(pUserName, pOldPassword, pNewPassword, authentication);
        }
        
        public System.Threading.Tasks.Task<bool> ChangePasswordAsync(string pUserName, string pOldPassword, string pNewPassword, HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication) {
            return base.Channel.ChangePasswordAsync(pUserName, pOldPassword, pNewPassword, authentication);
        }
        
        public bool ChangePasswordQuestionAndAnswer(string pUserName, string pPassword, string pNewPasswordQuestion, string pNewPasswordAnswer, HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication) {
            return base.Channel.ChangePasswordQuestionAndAnswer(pUserName, pPassword, pNewPasswordQuestion, pNewPasswordAnswer, authentication);
        }
        
        public System.Threading.Tasks.Task<bool> ChangePasswordQuestionAndAnswerAsync(string pUserName, string pPassword, string pNewPasswordQuestion, string pNewPasswordAnswer, HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication) {
            return base.Channel.ChangePasswordQuestionAndAnswerAsync(pUserName, pPassword, pNewPasswordQuestion, pNewPasswordAnswer, authentication);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HIFIS_Sample_Client.API.Authentication.CreateUserResponse HIFIS_Sample_Client.API.Authentication.IAuthenticationService.CreateUser(HIFIS_Sample_Client.API.Authentication.CreateUserRequest request) {
            return base.Channel.CreateUser(request);
        }
        
        public HIFIS_Sample_Client.API.Authentication.MembershipUser CreateUser(string pUserName, string pPassword, string pEmail, string pPasswordQuestion, string pPasswordAnswer, bool pIsApproved, object pProviderUserKey, out HIFIS_Sample_Client.API.Authentication.MembershipCreateStatus pStatus) {
            HIFIS_Sample_Client.API.Authentication.CreateUserRequest inValue = new HIFIS_Sample_Client.API.Authentication.CreateUserRequest();
            inValue.pUserName = pUserName;
            inValue.pPassword = pPassword;
            inValue.pEmail = pEmail;
            inValue.pPasswordQuestion = pPasswordQuestion;
            inValue.pPasswordAnswer = pPasswordAnswer;
            inValue.pIsApproved = pIsApproved;
            inValue.pProviderUserKey = pProviderUserKey;
            HIFIS_Sample_Client.API.Authentication.CreateUserResponse retVal = ((HIFIS_Sample_Client.API.Authentication.IAuthenticationService)(this)).CreateUser(inValue);
            pStatus = retVal.pStatus;
            return retVal.CreateUserResult;
        }
        
        public System.Threading.Tasks.Task<HIFIS_Sample_Client.API.Authentication.CreateUserResponse> CreateUserAsync(HIFIS_Sample_Client.API.Authentication.CreateUserRequest request) {
            return base.Channel.CreateUserAsync(request);
        }
        
        public bool DeleteUser(string pUserName, bool pDeleteAllRelatedData) {
            return base.Channel.DeleteUser(pUserName, pDeleteAllRelatedData);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(string pUserName, bool pDeleteAllRelatedData) {
            return base.Channel.DeleteUserAsync(pUserName, pDeleteAllRelatedData);
        }
        
        public bool GetEnablePasswordReset() {
            return base.Channel.GetEnablePasswordReset();
        }
        
        public System.Threading.Tasks.Task<bool> GetEnablePasswordResetAsync() {
            return base.Channel.GetEnablePasswordResetAsync();
        }
        
        public bool GetEnablePasswordRetrieval() {
            return base.Channel.GetEnablePasswordRetrieval();
        }
        
        public System.Threading.Tasks.Task<bool> GetEnablePasswordRetrievalAsync() {
            return base.Channel.GetEnablePasswordRetrievalAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HIFIS_Sample_Client.API.Authentication.FindUsersByEmailResponse HIFIS_Sample_Client.API.Authentication.IAuthenticationService.FindUsersByEmail(HIFIS_Sample_Client.API.Authentication.FindUsersByEmailRequest request) {
            return base.Channel.FindUsersByEmail(request);
        }
        
        public HIFIS_Sample_Client.API.Authentication.MembershipUser[] FindUsersByEmail(string pEmailToMatch, int pPageIndex, int pPageSize, out int pTotalRecords) {
            HIFIS_Sample_Client.API.Authentication.FindUsersByEmailRequest inValue = new HIFIS_Sample_Client.API.Authentication.FindUsersByEmailRequest();
            inValue.pEmailToMatch = pEmailToMatch;
            inValue.pPageIndex = pPageIndex;
            inValue.pPageSize = pPageSize;
            HIFIS_Sample_Client.API.Authentication.FindUsersByEmailResponse retVal = ((HIFIS_Sample_Client.API.Authentication.IAuthenticationService)(this)).FindUsersByEmail(inValue);
            pTotalRecords = retVal.pTotalRecords;
            return retVal.FindUsersByEmailResult;
        }
        
        public System.Threading.Tasks.Task<HIFIS_Sample_Client.API.Authentication.FindUsersByEmailResponse> FindUsersByEmailAsync(HIFIS_Sample_Client.API.Authentication.FindUsersByEmailRequest request) {
            return base.Channel.FindUsersByEmailAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HIFIS_Sample_Client.API.Authentication.FindUsersByNameResponse HIFIS_Sample_Client.API.Authentication.IAuthenticationService.FindUsersByName(HIFIS_Sample_Client.API.Authentication.FindUsersByNameRequest request) {
            return base.Channel.FindUsersByName(request);
        }
        
        public HIFIS_Sample_Client.API.Authentication.MembershipUser[] FindUsersByName(string pUsernameToMatch, int pPageIndex, int pPageSize, out int pTotalRecords) {
            HIFIS_Sample_Client.API.Authentication.FindUsersByNameRequest inValue = new HIFIS_Sample_Client.API.Authentication.FindUsersByNameRequest();
            inValue.pUsernameToMatch = pUsernameToMatch;
            inValue.pPageIndex = pPageIndex;
            inValue.pPageSize = pPageSize;
            HIFIS_Sample_Client.API.Authentication.FindUsersByNameResponse retVal = ((HIFIS_Sample_Client.API.Authentication.IAuthenticationService)(this)).FindUsersByName(inValue);
            pTotalRecords = retVal.pTotalRecords;
            return retVal.FindUsersByNameResult;
        }
        
        public System.Threading.Tasks.Task<HIFIS_Sample_Client.API.Authentication.FindUsersByNameResponse> FindUsersByNameAsync(HIFIS_Sample_Client.API.Authentication.FindUsersByNameRequest request) {
            return base.Channel.FindUsersByNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HIFIS_Sample_Client.API.Authentication.GetAllUsersResponse HIFIS_Sample_Client.API.Authentication.IAuthenticationService.GetAllUsers(HIFIS_Sample_Client.API.Authentication.GetAllUsersRequest request) {
            return base.Channel.GetAllUsers(request);
        }
        
        public HIFIS_Sample_Client.API.Authentication.MembershipUser[] GetAllUsers(int pPageIndex, int pPageSize, out int pTotalRecords) {
            HIFIS_Sample_Client.API.Authentication.GetAllUsersRequest inValue = new HIFIS_Sample_Client.API.Authentication.GetAllUsersRequest();
            inValue.pPageIndex = pPageIndex;
            inValue.pPageSize = pPageSize;
            HIFIS_Sample_Client.API.Authentication.GetAllUsersResponse retVal = ((HIFIS_Sample_Client.API.Authentication.IAuthenticationService)(this)).GetAllUsers(inValue);
            pTotalRecords = retVal.pTotalRecords;
            return retVal.GetAllUsersResult;
        }
        
        public System.Threading.Tasks.Task<HIFIS_Sample_Client.API.Authentication.GetAllUsersResponse> GetAllUsersAsync(HIFIS_Sample_Client.API.Authentication.GetAllUsersRequest request) {
            return base.Channel.GetAllUsersAsync(request);
        }
        
        public int GetNumberOfUsersOnline() {
            return base.Channel.GetNumberOfUsersOnline();
        }
        
        public System.Threading.Tasks.Task<int> GetNumberOfUsersOnlineAsync() {
            return base.Channel.GetNumberOfUsersOnlineAsync();
        }
        
        public string GetPassword(string pUserName, string pAnswer) {
            return base.Channel.GetPassword(pUserName, pAnswer);
        }
        
        public System.Threading.Tasks.Task<string> GetPasswordAsync(string pUserName, string pAnswer) {
            return base.Channel.GetPasswordAsync(pUserName, pAnswer);
        }
        
        public string GetUserNameByEmail(string pEmail) {
            return base.Channel.GetUserNameByEmail(pEmail);
        }
        
        public System.Threading.Tasks.Task<string> GetUserNameByEmailAsync(string pEmail) {
            return base.Channel.GetUserNameByEmailAsync(pEmail);
        }
        
        public int GetMaxInvalidPasswordAttempts() {
            return base.Channel.GetMaxInvalidPasswordAttempts();
        }
        
        public System.Threading.Tasks.Task<int> GetMaxInvalidPasswordAttemptsAsync() {
            return base.Channel.GetMaxInvalidPasswordAttemptsAsync();
        }
        
        public int GetMinRequiredNonAlphanumericCharacters(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token) {
            return base.Channel.GetMinRequiredNonAlphanumericCharacters(token);
        }
        
        public System.Threading.Tasks.Task<int> GetMinRequiredNonAlphanumericCharactersAsync(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token) {
            return base.Channel.GetMinRequiredNonAlphanumericCharactersAsync(token);
        }
        
        public int GetMinRequiredPasswordLength(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token) {
            return base.Channel.GetMinRequiredPasswordLength(token);
        }
        
        public System.Threading.Tasks.Task<int> GetMinRequiredPasswordLengthAsync(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token) {
            return base.Channel.GetMinRequiredPasswordLengthAsync(token);
        }
        
        public int GetPasswordAttemptWindow() {
            return base.Channel.GetPasswordAttemptWindow();
        }
        
        public System.Threading.Tasks.Task<int> GetPasswordAttemptWindowAsync() {
            return base.Channel.GetPasswordAttemptWindowAsync();
        }
        
        public HIFIS_Sample_Client.API.Authentication.MembershipPasswordFormat GetPasswordFormat() {
            return base.Channel.GetPasswordFormat();
        }
        
        public System.Threading.Tasks.Task<HIFIS_Sample_Client.API.Authentication.MembershipPasswordFormat> GetPasswordFormatAsync() {
            return base.Channel.GetPasswordFormatAsync();
        }
        
        public string GetPasswordStrengthRegularExpression(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token) {
            return base.Channel.GetPasswordStrengthRegularExpression(token);
        }
        
        public System.Threading.Tasks.Task<string> GetPasswordStrengthRegularExpressionAsync(HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token) {
            return base.Channel.GetPasswordStrengthRegularExpressionAsync(token);
        }
        
        public bool GetRequiresQuestionAndAnswer() {
            return base.Channel.GetRequiresQuestionAndAnswer();
        }
        
        public System.Threading.Tasks.Task<bool> GetRequiresQuestionAndAnswerAsync() {
            return base.Channel.GetRequiresQuestionAndAnswerAsync();
        }
        
        public bool GetRequiresUniqueEmail() {
            return base.Channel.GetRequiresUniqueEmail();
        }
        
        public System.Threading.Tasks.Task<bool> GetRequiresUniqueEmailAsync() {
            return base.Channel.GetRequiresUniqueEmailAsync();
        }
        
        public string ResetPassword(string pUserName, string pAnswer, System.Guid pProviderUserKey) {
            return base.Channel.ResetPassword(pUserName, pAnswer, pProviderUserKey);
        }
        
        public System.Threading.Tasks.Task<string> ResetPasswordAsync(string pUserName, string pAnswer, System.Guid pProviderUserKey) {
            return base.Channel.ResetPasswordAsync(pUserName, pAnswer, pProviderUserKey);
        }
        
        public HIFIS.CONTRACTS.WCFContracts.DataContracts.WCFValidationResult UnlockUser(string userName, HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication) {
            return base.Channel.UnlockUser(userName, authentication);
        }
        
        public System.Threading.Tasks.Task<HIFIS.CONTRACTS.WCFContracts.DataContracts.WCFValidationResult> UnlockUserAsync(string userName, HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication) {
            return base.Channel.UnlockUserAsync(userName, authentication);
        }
        
        public void UpdateUser(HIFIS_Sample_Client.API.Authentication.MembershipUser pUser, HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication) {
            base.Channel.UpdateUser(pUser, authentication);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(HIFIS_Sample_Client.API.Authentication.MembershipUser pUser, HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication) {
            return base.Channel.UpdateUserAsync(pUser, authentication);
        }
        
        public HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication ValidateUser(string userName, string password, System.Nullable<int> userOrgID, string securityToken, string sessionID) {
            return base.Channel.ValidateUser(userName, password, userOrgID, securityToken, sessionID);
        }
        
        public System.Threading.Tasks.Task<HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication> ValidateUserAsync(string userName, string password, System.Nullable<int> userOrgID, string securityToken, string sessionID) {
            return base.Channel.ValidateUserAsync(userName, password, userOrgID, securityToken, sessionID);
        }
        
        public HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication RenewToken(string userName) {
            return base.Channel.RenewToken(userName);
        }
        
        public System.Threading.Tasks.Task<HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication> RenewTokenAsync(string userName) {
            return base.Channel.RenewTokenAsync(userName);
        }
        
        public void InitializeTwoFactorToken(string userName, HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token) {
            base.Channel.InitializeTwoFactorToken(userName, token);
        }
        
        public System.Threading.Tasks.Task InitializeTwoFactorTokenAsync(string userName, HIFIS.CONTRACTS.WCFContracts.DataContracts.UnAuthenticatedAppToken token) {
            return base.Channel.InitializeTwoFactorTokenAsync(userName, token);
        }
        
        public HIFIS.CONTRACTS.WCFContracts.DataContracts.WCFValidationResult LogOff(HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication) {
            return base.Channel.LogOff(authentication);
        }
        
        public System.Threading.Tasks.Task<HIFIS.CONTRACTS.WCFContracts.DataContracts.WCFValidationResult> LogOffAsync(HIFIS.CONTRACTS.WCFContracts.DataContracts.Authentication authentication) {
            return base.Channel.LogOffAsync(authentication);
        }
        
        public void AddUsersToRoles(string[] pUserNames, string[] pRoleNames) {
            base.Channel.AddUsersToRoles(pUserNames, pRoleNames);
        }
        
        public System.Threading.Tasks.Task AddUsersToRolesAsync(string[] pUserNames, string[] pRoleNames) {
            return base.Channel.AddUsersToRolesAsync(pUserNames, pRoleNames);
        }
        
        public void CreateRole(string pRoleName) {
            base.Channel.CreateRole(pRoleName);
        }
        
        public System.Threading.Tasks.Task CreateRoleAsync(string pRoleName) {
            return base.Channel.CreateRoleAsync(pRoleName);
        }
        
        public bool DeleteRole(string pRoleName, bool pThrowOnPopulatedRole) {
            return base.Channel.DeleteRole(pRoleName, pThrowOnPopulatedRole);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRoleAsync(string pRoleName, bool pThrowOnPopulatedRole) {
            return base.Channel.DeleteRoleAsync(pRoleName, pThrowOnPopulatedRole);
        }
        
        public string[] FindUsersInRole(string pRoleName, string pUserName) {
            return base.Channel.FindUsersInRole(pRoleName, pUserName);
        }
        
        public System.Threading.Tasks.Task<string[]> FindUsersInRoleAsync(string pRoleName, string pUserName) {
            return base.Channel.FindUsersInRoleAsync(pRoleName, pUserName);
        }
        
        public string[] GetAllRoles() {
            return base.Channel.GetAllRoles();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllRolesAsync() {
            return base.Channel.GetAllRolesAsync();
        }
        
        public string[] GetRolesForUser(string pUserName) {
            return base.Channel.GetRolesForUser(pUserName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetRolesForUserAsync(string pUserName) {
            return base.Channel.GetRolesForUserAsync(pUserName);
        }
        
        public string[] GetUsersInRole(string pRoleName) {
            return base.Channel.GetUsersInRole(pRoleName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUsersInRoleAsync(string pRoleName) {
            return base.Channel.GetUsersInRoleAsync(pRoleName);
        }
        
        public bool IsUserInRole(string pUserName, string pRoleName) {
            return base.Channel.IsUserInRole(pUserName, pRoleName);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserInRoleAsync(string pUserName, string pRoleName) {
            return base.Channel.IsUserInRoleAsync(pUserName, pRoleName);
        }
        
        public void RemoveUsersFromRoles(string[] pUserNames, string[] pRoleNames) {
            base.Channel.RemoveUsersFromRoles(pUserNames, pRoleNames);
        }
        
        public System.Threading.Tasks.Task RemoveUsersFromRolesAsync(string[] pUserNames, string[] pRoleNames) {
            return base.Channel.RemoveUsersFromRolesAsync(pUserNames, pRoleNames);
        }
        
        public bool RoleExists(string pRoleName) {
            return base.Channel.RoleExists(pRoleName);
        }
        
        public System.Threading.Tasks.Task<bool> RoleExistsAsync(string pRoleName) {
            return base.Channel.RoleExistsAsync(pRoleName);
        }
    }
}
